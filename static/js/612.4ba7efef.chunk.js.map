{"version":3,"file":"static/js/612.4ba7efef.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.pie.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/core/core.adapters.ts","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/elements/element.arc.ts","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.ts","../node_modules/chart.js/src/elements/element.bar.js","../node_modules/chart.js/src/plugins/plugin.colors.ts","../node_modules/chart.js/src/plugins/plugin.decimation.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","../node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","../node_modules/chart.js/src/plugins/plugin.filler/index.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/chart.js/src/scales/scale.timeseries.js","../node_modules/chart.js/src/index.ts","../node_modules/chart.js/auto/auto.js"],"sourcesContent":["import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis\n    || axisFromPosition(scaleOptions.position)\n    || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n"],"names":["_get","Reflect","get","bind","target","property","receiver","base","object","Object","prototype","hasOwnProperty","call","getPrototypeOf","desc","getOwnPropertyDescriptor","arguments","length","value","apply","this","Animator","_classCallCheck","_request","_charts","Map","_running","_lastDate","undefined","_createClass","key","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_this","requestAnimFrame","window","_update","_refresh","_this2","Date","now","remaining","running","items","item","i","draw","_active","_total","tick","pop","_notify","charts","complete","progress","set","event","cb","_getAnims","push","_this$_getAnims$items","_toConsumableArray","reduce","acc","cur","max","_duration","cancel","delete","animator","transparent","interpolators","boolean","from","to","factor","color","c0","c1","valid","mix","hexString","number","Animation","cfg","prop","currentValue","resolve","_fn","_easing","effects","easing","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","isObject","animationOptions","keys","defaults","animatedProps","getOwnPropertyNames","_i","_animationOptions","option","isArray","properties","has","values","newOptions","options","$shared","assign","$animations","resolveTargetOptions","animations","_createAnimations","anim","active","wait","all","awaitAll","then","props","charAt","animation","update","_animateOptions","size","add","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","ilen","metasets","_getSortedDatasetMetas","index","applyStack","stack","dsIndex","datasetIndex","otherValue","singleMode","mode","isNumberFinite","sign","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","_step","_iterator","_createForOfIteratorHelper","getMatchingVisibleMetas","s","n","done","err","e","f","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","concat","id","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","scales","filter","shift","clearStacks","_parsed","_step2","_iterator2","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","constructor","dataElementType","initialize","linkScales","_stacked","addElements","fill","isPluginEnabled","console","warn","dataset","getDataset","chooseId","x","y","r","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","data","datasets","getDatasetMeta","scaleID","unlistenArrayEvents","adata","Array","convertObjectDataToArray","isExtensible","listenArrayEvents","_dataCheck","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","labels","getLabels","singleScale","_parsed$i","_defineProperty","parse","_this$_parsing","_this$_parsing$xAxisK","xAxisKey","_this$_parsing$yAxisK","yAxisKey","resolveObjectKey","range","parsedValue","NaN","canStack","otherScale","_getOtherScale","hidden","createStack","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","_getUserBounds","_scale$getUserBounds","getUserBounds","minDefined","maxDefined","otherMin","otherMax","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","t","b","l","top","right","bottom","left","disabled","toClip","clip","defaultClip","getMaxOverflow","elements","area","chartArea","drawActiveElementsOnTop","element","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","createContext","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","_this3","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","_cacheable","sharedOptions","_animationsDisabled","firstOpts","previouslySharedOptions","getSharedOptions","includeOptions","updateSharedOptions","_resolveAnimations","getStyle","_setStyle","_step3","_iterator3","_step3$value","_slicedToArray","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","args","_args2","_dataChanges","_sync","newCount","computeMinSampleSize","curr","_cache","$bar","visibleMetas","getAllParsedValues","_arrayUnique","sort","a","getAllScaleValues","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","_borderProps","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v1","v2","startEnd","v","setInflateAmount","_ref","ratio","inflateAmount","BarController","_DatasetController","_inherits","_super","_createSuper","obj","_this$_parsing2","_this$_parsing2$xAxis","_this$_parsing2$yAxis","iAxisKey","vAxisKey","_getPrototypeOf","bars","reset","getBasePixel","isHorizontal","ruler","_getRuler","_this$_getSharedOptio","_getSharedOptions","vpixels","isNullOrUndef","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","updateElement","last","_step4","grouped","skipNull","val","isNaN","_iterator4","indexOf","_getStacks","name","pixels","barThickness","_startPixel","_endPixel","stackCount","_getStackCount","categoryPercentage","barPercentage","_this$_cachedMeta","_this$options","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","_getStackIndex","rects","numbers","_index_","offset","grid","_value_","beginAtZero","BubbleController","_DatasetController2","_super2","radius","points","_this$_cachedMeta2","_this$_getSharedOptio2","point","iPixel","vPixel","skip","DoughnutController","_DatasetController3","_super3","_this4","innerRadius","outerRadius","offsetX","offsetY","getter","_this$_parsing$key","toRadians","rotation","circumference","TAU","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","toPercentage","chartWeight","_getRingWeight","_this$_getRotationExt","_getRotationExtents","_getRatioAndOffset","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_this$_getSharedOptio3","_circumference","arc","metaData","formatNumber","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","_scriptable","_indexable","aspectRatio","plugins","legend","generateLabels","_chart$legend$options2","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","onClick","legendItem","toggleDataVisibility","LineController","_DatasetController4","_super4","line","_meta$data","_dataset","animationsDisabled","_getStartAndCountOfVi","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","_this$_cachedMeta3","_this$_getSharedOptio4","_this$options2","spanGaps","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","stop","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","_DatasetController5","_super5","_this5","_parseObjectDataRadialScale","_updateRadius","_this6","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","_this7","_chart$legend$options3","angleLines","display","circular","pointLabels","PieController","_DoughnutController","_super6","RadarController","_DatasetController6","_super7","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","_DatasetController7","_super8","_meta$data2","_getStartAndCountOfVi2","registry","getElement","_this$_cachedMeta4","_this$options3","interaction","abstract","Error","adapters","_date","DateAdapterBase","members","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","_metasets$i","_binarySearch","j","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","_isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getNearestItems","_element$getProps","getProps","getAngleFromPoint","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","setLayoutDims","layouts","params","layout","_step5","_iterator5","wrap","stackWeight","includes","_stack","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","getMargins","marginForPositions","positions","margin","fitBoxes","boxes","refit","changed","refitBoxes","_updateDims","setBoxDims","placeBoxes","_step6","userPadding","padding","_iterator6","height1","width1","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","layoutBoxes","_box","_box$options","_box$options$stackWei","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","canvas","listener","BasicPlatform","_BasePlatform","_super9","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","supportsEventListenerOptions","passive","removeListener","removeEventListener","nodeListContains","nodeList","_step7","_iterator7","node","contains","createAttachObserver","observer","MutationObserver","entries","_step8","trigger","_iterator8","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","_step9","_iterator9","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","addEventListener","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","_getRelativePosition","native","fromNativeEvent","addListener","DomPlatform","_BasePlatform2","_super10","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","getMaximumSize","isConnected","_detectPlatform","_isDomSupported","OffscreenCanvas","Element","_this$getProps","final","_this8","ret","autoSkip","tickOpts","determinedMaxTicks","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","result","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","diff","len","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","round","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","toFont","lineHeight","titleAlign","align","_toLeftRightCenter","reverseAlign","Scale","_Element","_super11","_this9","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","_this$getUserBounds","metas","getMinMax","xLabels","yLabels","_computeLabelItems","callback","beforeUpdate","margins","_this$options4","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","tickWidth","maxLabelDiagonal","numTicks","minRotation","maxRotation","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","title","toDegrees","asin","_this$options5","titleOpts","gridOpts","titleHeight","_this$_getLabelSizes","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","_this$options6","_this$options6$ticks","isRotated","labelsBelowTicks","offsetLeft","offsetRight","_this$options7","generateTickLabels","_computeLabelSizes","jlen","tickFont","fontString","nestedLabel","caches","widths","heights","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","_measureText","gcLen","garbageCollect","valueAt","idx","pixel","decimal","_int16Range","_alignPixel","getBaseValue","createTickContext","optionTicks","rot","autoSkipPadding","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","positionAxisID","positionAxisID1","value1","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","textAlign","lineCount","textOffset","crossAlign","tickAndPadding","hTickAndPadding","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","ret1","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","tickTextAlign","showLabelBackdrop","backdrop","labelPadding","backdropPadding","backdropColor","translation","_this$options8","_this$options9","_this$options9$ticks","save","fillRect","restore","findIndex","_computeGridLineItems","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","_this$options10","lastLineWidth","_computeLabelArea","clipArea","_step10","getLabelItems","_iterator10","renderTextOptions","renderText","unclipArea","_this$options11","_titleArgs","titleX","titleY","_alignStartEnd","titleArgs","drawBackground","drawGrid","drawBorder","drawTitle","drawLabels","_this10","tz","gz","bz","axisID","fontSize","TypedRegistry","scope","override","create","isPrototypeOf","parentScope","proto","isIChartComponent","register","itemDefaults","merge","defaultRoutes","routes","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","routeDefaults","descriptors","registerDefaults","overrides","Registry","controllers","_typedRegistries","_len","_key","_each","_len2","_key2","_len3","_key3","_len4","_key4","_len5","_key5","_len6","_key6","_len7","_key7","_len8","_key8","_len9","_key9","_len10","_key10","typedRegistry","_this11","arg","reg","_getRegistryForType","isForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","hook","_createDescriptors","_descriptors","_step11","_iterator11","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","localIds","getPlugin","local","i1","allPlugins","_ref2","_step12","_iterator12","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","_ref3","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","toLowerCase","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","mergeIf","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","_getResolver","getResolver","resolver","subPrefixes","_step14","_descriptors2","isScriptable","isIndexable","_iterator14","isFunction","hasFunction","needContext","subResolver","_attachContext","_step13","_iterator13","descriptorDefaults","resolverCache","_createResolver","p","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","c","moveNumericKeys","_i2","_keys","intKey","Chart","userConfig","_this12","initialCanvas","existingChart","chartOptionScopes","updateConfig","acquireContext","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","listen","_initialize","_this$options12","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resizeBeforeDraw","_resize","newSize","newRatio","getDevicePixelRatio","onResize","render","scalesOptions","axisOptions","_this13","scaleOpts","updated","isRadial","dposition","dtype","scaleType","getScale","init","hasUpdated","_destroyDatasetMeta","slice","_this14","newControllers","_removeUnreferencedMetasets","order","visible","updateIndex","ControllerClass","getController","_defaults$datasets$ty","_updateMetasets","_this15","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","_this16","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","events","setsEqual","unbindEvents","_step15","changes","_getUniformDataChanges","_iterator15","_step15$value","datasetCount","makeSet","changeSet","_this17","noArea","_this17$_layers","_idx","ilen1","_updateDataset","_this$_resizeBeforeDr","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","setDatasetVisibility","_updateVisibility","_destroy","remove","_stop","releaseContext","_this$canvas","toDataURL","bindUserEvents","bindResponsiveEvents","_this18","_add","_this19","detached","_remove","isAttached","_this20","prefix","activeElements","_this21","lastActive","_ref4","_elementsEqual","notify","pluginId","replay","hoverOptions","hover","deactivated","activated","updateHoverStyle","_this22","inChartArea","eventFilter","_handleEvent","_this$_active","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","onHover","getElementsAtEventForMode","invalidatePlugins","parseBorderRadius$1","angleDelta","o","borderRadius","_readValueToProps","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","_parseBorderRadius$","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","pCenter1","innerMidAdjustedAngle","pCenter2","p8","pCenter3","outerStartX","outerStartY","outerEndX","outerEndY","closePath","fullCircles","borderJoinStyle","inner","lineJoin","angleMargin","clipArc","ArcElement","_Element2","_super12","_this23","_assertThisInitialized","chartX","chartY","_getAngleFromPoint2","_this$getProps2","rAdjust","betweenAngles","withinRadius","_isBetween","_this$getProps3","_this$options13","halfAngle","halfRadius","translate","radiusOffset","drawArc","setStyle","lineCap","borderCapStyle","previous","pathVars","_params$start","paramsStart","_params$end","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","_pathVars","lineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","getLineMethod","_ref5","_ref5$move","fastPathSegment","prevX","lastY","_pathVars2","_ref6","_ref6$move","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","_step16","segments","segmentMethod","_iterator16","strokePathDirect","LineElement","_Element3","_super13","_this24","_points","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","_boundSegments","_interpolate","_steppedInterpolation","_bezierInterpolation","_pointInLine","_getInterpolationMethod","_segments$i","interpolated","_step17","_iterator17","inRange$1","hitRadius","capBezierPoints","PointElement","_Element4","_super14","_this25","mouseX","mouseY","_this$getProps4","_this$getProps5","hoverRadius","drawPoint","getBarBounds","bar","half","_bar$getProps","skipOrLimit","boundingRects","bounds","maxW","maxH","toTRBL","parseBorderWidth","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","_Element5","_super15","_this26","_this$options14","_boundingRects","addRectPath","addRoundedRectPath","_this$getProps6","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","k","plugin_colors","forceOverride","_args","_chart$config","chartOptions","colorizer","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","_getStartAndCountOfVi3","pointCount","_iScale$getUserBounds","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","d","samples","maxAreaPoint","maxArea","nextA","bucketWidth","sampledIndex","endIndex","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","_data$a","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","_objectSpread","minMaxDecimation","destroy","_getBounds","_normalizeAngle","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","_ref7","_ref7$x","_ref7$y","linePoints","_ref8","_pointsFromSegments","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","fillOption","parseFillOption","parseFloat","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","_findPoint","findPoint","unshift","interpolate","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_source$scale","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","_ref9","_ref9$above","above","_ref9$below","clipVertical","doFill","clipY","lineLoop","_step21","_iterator21","_step22","_step18","tpoints","_iterator18","_step19","targetSegments","_iterator19","_step20","tgt","subBounds","fillSources","_boundSegment","_iterator20","fillSource","_iterator22","_step22$value","src","_src$style","_src$style2$backgroun","notShape","clipBounds","interpolatedLineTo","targetLoop","_scale$chart$chartAre","_ref10","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","_labelOpts$boxHeight","boxHeight","_labelOpts$boxWidth","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_Element6","_super16","_this27","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","_this28","labelFont","_computeTitleHeight","_getBoxSize","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","_calculateItemSize","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","_this$options15","rtl","rtlHelper","getRtlAdapter","_step23","_iterator23","hitbox","leftForLtr","_step24","_iterator24","hitbox1","_draw","cursor","_this29","defaultColor","halfFontSize","_getBoxSize2","overrideTextDirection","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","drawLegendBox","_textX","strikethrough","fillText","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","onLeave","isListened","hoveredItem","_getLegendItemAt","sameItem","plugin_legend","_element","adjustHitBoxes","afterEvent","handleEvent","ci","hide","show","_chart$legend$options","useBorderRadius","startsWith","Title","_Element7","_super17","_this30","_padding","textSize","fontOpts","_this$_drawArgs","_drawArgs","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","hasValue","tooltipPosition","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","str","String","createTooltipItem","_controller$getLabelA","getLabelAndValue","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","_chart$chartArea","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","_toTRBLCorners","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","noop","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","_Element8","_super18","_this31","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","_this32","bodyItems","scoped","_this33","itemSort","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","_toTRBLCorners2","ptX","ptY","pt","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","textColor","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","_drawColorBox","footerAlign","footerColor","tooltipSize","_toTRBLCorners3","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","_this34","_ref11","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_willRender","_fallback","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_Scale","_super19","_this35","_startValue","_valueRange","_addedLabels","added","_step25","_iterator25","_step25$value","isFinite","_this$getUserBounds2","_this$getMinMax","getDecimalForPixel","relativeLabelSize","minSpacing","_ref12","rad","LinearScaleBase","_Scale2","_super20","_this36","_endValue","_this$getUserBounds3","setMin","setMax","minSign","maxSign","maxTicks","stepSize","computeTickLimit","getTickLimit","generationOptions","dataRange","niceMin","niceMax","numSpaces","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceNum","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","generateTicks$1","_maxDigits","_setMinAndMaxByKey","format","LinearScale","_LinearScaleBase","_super21","_this$getMinMax2","handleTickRangeOptions","Ticks","log10Floor","log10","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","_ref13","minExp","exp","startExp","significand","lastTick","LogarithmicScale","_Scale3","_super22","_this37","_zero","_this$getMinMax3","_this$getUserBounds4","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","_longestText","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","_LinearScaleBase2","_super23","_this38","_this$getMinMax4","_this39","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","_this$_pointLabelItem","_this$options16","_this40","_scale$_pointLabelIte","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","_this41","rotate","animate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","_scale$_parseOpts","_parseOpts","parser","isoWeekday","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","_lookup2","_lookup","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_Scale4","_super24","_this42","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_this$getUserBounds5","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","formatter","minorFormat","majorFormat","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","normalize","table","prevSource","nextSource","prevTarget","nextTarget","_lookupByKey2","_table$lo","_table$hi","_lookupByKey3","_table$lo2","_table$hi2","span","TimeSeriesScale","_TimeScale","_super25","_this43","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"sourceRoot":""}